import os
import logging
import requests
from io import BytesIO  # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackContext,
    CallbackQueryHandler,
    ConversationHandler,
)


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
DATE, PHONE, PARENT_NAME, GIRL_NAME, AGE, EXPERIENCE, SOURCE = range(7)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
user_data_db = {}
location_messages = {}  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–∞—Ä—Ç–æ–π

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_TOKEN')
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID')

# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
LOCATION_COORDINATES = (56.50849, 85.02575)  # –®–∏—Ä–æ—Ç–∞, –¥–æ–ª–≥–æ—Ç–∞

# GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
GITHUB_REPO_URL = "https://raw.githubusercontent.com/syakimmm/vavilon/main/"

## –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤
PHOTO_ALBUMS = {
    'about': [
        f"{GITHUB_REPO_URL}–æ–Ω–∞—Å.JPG"
    ],
    'info': [
        f"{GITHUB_REPO_URL}–≤—Å–µ—á—Ç–æ–Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ –Ω–∞–±–æ—Ä–∞—Ö.JPG"
    ]
}

async def download_photo(url: str) -> BytesIO:
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –∏–∑ GitHub"""
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        return BytesIO(response.content)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ: {e}")
        raise

async def send_photo_album(update: Update, context: CallbackContext, album_name: str, caption: str):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª—å–±–æ–º–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    query = update.callback_query
    await query.answer()

    try:
        media_group = []
        for i, url in enumerate(PHOTO_ALBUMS[album_name]):
            photo = await download_photo(url)
            media_group.append(InputMediaPhoto(
                media=photo,
                caption=caption if i == 0 else ""
            ))

        await context.bot.send_media_group(
            chat_id=query.message.chat_id,
            media=media_group
        )
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
        await query.edit_message_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
        return False

async def start(update: Update, context: CallbackContext) -> None:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    if update.callback_query:
        user_id = update.callback_query.from_user.id
        if user_id in location_messages:
            try:
                await context.bot.delete_message(
                    chat_id=update.callback_query.message.chat_id,
                    message_id=location_messages[user_id]
                )
                del location_messages[user_id]
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã: {e}")

    keyboard = [
        [InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="signup")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û –Ω–∞—Å", callback_data="about")],
        [InlineKeyboardButton("üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–±–æ—Ä–∞—Ö", callback_data="info")],
        [InlineKeyboardButton("üìç –ê–¥—Ä–µ—Å", callback_data="location")],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")]
    ]

    if update.message:
        await update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ü©∞\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    else:
        query = update.callback_query
        await query.answer()
        await query.edit_message_text(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

async def signup(update: Update, context: CallbackContext) -> int:
    """–ù–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏ - –≤—ã–±–æ—Ä –¥–∞—Ç—ã"""
    query = update.callback_query
    await query.answer()

    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã
    context.user_data['dates'] = [
        "25.08.2025 –≤ 11:00",
        "26.08.2025 –≤ 11:00"
    ]

    keyboard = [
        [InlineKeyboardButton(context.user_data['dates'][0], callback_data="date_0")],
        [InlineKeyboardButton(context.user_data['dates'][1], callback_data="date_1")]
    ]

    await query.edit_message_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    return DATE

async def date_choice(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã"""
    query = update.callback_query
    await query.answer()

    date_index = int(query.data.split('_')[1])
    context.user_data['date'] = context.user_data['dates'][date_index]

    await query.edit_message_text(
        f"–í—ã–±—Ä–∞–Ω–æ: {context.user_data['date']}\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:"
    )
    return PHONE

async def phone_input(update: Update, context: CallbackContext) -> int:
    """–í–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    context.user_data['phone'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è (—Ä–æ–¥–∏—Ç–µ–ª—è):")
    return PARENT_NAME

async def parent_name_input(update: Update, context: CallbackContext) -> int:
    """–í–≤–æ–¥ –∏–º–µ–Ω–∏ —Ä–æ–¥–∏—Ç–µ–ª—è"""
    context.user_data['parent_name'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ä–µ–±–µ–Ω–∫–∞:")
    return GIRL_NAME

async def girl_name_input(update: Update, context: CallbackContext) -> int:
    """–í–≤–æ–¥ –∏–º–µ–Ω–∏ —Ä–µ–±–µ–Ω–∫–∞"""
    context.user_data['girl_name'] = update.message.text
    await update.message.reply_text("–°–∫–æ–ª—å–∫–æ –ª–µ—Ç —Ä–µ–±–µ–Ω–∫—É?")
    return AGE

async def age_input(update: Update, context: CallbackContext) -> int:
    """–í–≤–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç–∞"""
    context.user_data['age'] = update.message.text
    await update.message.reply_text("–ß–µ–º —Ä–∞–Ω—å—à–µ –∑–∞–Ω–∏–º–∞–ª–∏—Å—å? (–û–ø—ã—Ç –∑–∞–Ω—è—Ç–∏–π):")
    return EXPERIENCE

async def experience_input(update: Update, context: CallbackContext) -> int:
    """–í–≤–æ–¥ –æ–ø—ã—Ç–∞"""
    context.user_data['experience'] = update.message.text
    await update.message.reply_text("–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å?")
    return SOURCE

async def source_input(update: Update, context: CallbackContext) -> int:
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    context.user_data['source'] = update.message.text
    user_id = update.message.from_user.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    user_data_db[user_id] = context.user_data

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    admin_message = (
        "‚ú® –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ!\n\n"
        f"üìÖ –î–∞—Ç–∞: {context.user_data['date']}\n"
        f"üë§ –†–æ–¥–∏—Ç–µ–ª—å: {context.user_data['parent_name']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}\n"
        f"üëß –†–µ–±–µ–Ω–æ–∫: {context.user_data['girl_name']} ({context.user_data['age']} –ª–µ—Ç)\n"
        f"üéì –û–ø—ã—Ç: {context.user_data['experience']}\n"
        f"üîç –û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏: {context.user_data['source']}\n"
        f"üÜî ID: {user_id}"
    )
    await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=admin_message)

    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    await update.message.reply_text(
        "‚úÖ –ó–∞–ø–∏—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!\n\n"
        f"–ú—ã –∂–¥–µ–º –≤–∞—Å {context.user_data['date']}\n"
        f"–ü–æ –∞–¥—Ä–µ—Å—É: –≥. –¢–æ–º—Å–∫, —É–ª. –ò—Ä–∫—É—Ç—Å–∫–∏–π —Ç—Ä–∞–∫—Ç, 86/1\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –∑–≤–æ–Ω–∏—Ç–µ: +7 (913) 880-84-58 –∏–ª–∏ +7 (983) 236-42-84",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="cancel")],
            [InlineKeyboardButton("üè† –í –º–µ–Ω—é", callback_data="back")]
        ])
    )
    return ConversationHandler.END

async def cancel_lesson(update: Update, context: CallbackContext) -> None:
    """–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏"""
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    if user_id in user_data_db:
        await context.bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=f"‚ùå –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}"
        )
        del user_data_db[user_id]
        await query.edit_message_text("‚ùå –í–∞—à–∞ –∑–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞")
    else:
        await query.edit_message_text("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π")

    await start(update, context)

async def about(update: Update, context: CallbackContext) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–∏–∏ —Å —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º–æ–º"""
    about_text = (
        "–ú—ã ‚Äì –ù–∞—Ä–æ–¥–Ω—ã–π –∞–Ω—Å–∞–º–±–ª—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ç–∞–Ω—Ü–∞ ¬´–í–∞–≤–∏–ª–æ–Ω¬ª! –ò—Å—Ç–æ—Ä–∏—è –Ω–∞—à–µ–≥–æ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ –Ω–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç 27 –ª–µ—Ç, –∞ —á–∏—Å–ª–æ —É—á–µ–Ω–∏—Ü –ø—Ä–µ–≤—ã—à–∞–µ—Ç 200 —á–µ–ª–æ–≤–µ–∫.\n\n"
        "–°—Ä–µ–¥–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –Ω–∞—à–µ–≥–æ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ –ø–æ–±–µ–¥—ã –∏ –ø—Ä–∏–∑–µ—Ä—Å—Ç–≤–∞ –Ω–∞ –∫—Ä—É–ø–Ω—ã—Ö —á–µ–º–ø–∏–æ–Ω–∞—Ç–∞—Ö –†–æ—Å—Å–∏–∏, –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –∏ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è—Ö –≤—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —É—Ä–æ–≤–Ω–µ–π. "
        "–í—Å–µ —ç—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã –ø–µ–¥–∞–≥–æ–≥–æ–≤-–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞.\n\n"
        "–ù–∞—à–∏ —É—á–µ–Ω–∏—Ü—ã –ø–æ–ª—É—á–∞—é—Ç –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ —Å—Ñ–µ—Ä–µ —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏–∏: –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞—à–∏—Ö –≤–æ—Å–ø–∏—Ç–∞–Ω–Ω–∏—Ü —Ö–∏–ø—Ö–æ–ø, –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ç–∞–Ω–µ—Ü, –∞–∫—Ä–æ–±–∞—Ç–∏–∫–∞, "
        "–∑–∞–Ω—è—Ç–∏—è –æ–±—â–µ–π —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏.\n\n"
        "–ê –µ—â–µ –º—ã –±–æ–ª—å—à–∞—è —Å–µ–º—å—è! –ù–∞—à–∏ —É—á–µ–Ω–∏—Ü—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—é—Ç –ø–æ –†–æ—Å—Å–∏–∏, –≤—ã—Å—Ç—É–ø–∞—é—Ç –Ω–∞ –∫—Ä—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö, –ø–æ–ø–æ–ª–Ω—è—é—Ç –±–∞–≥–∞–∂ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π. "
        "–í—Å–µ —ç—Ç–æ –æ–Ω–∏ –¥–µ–ª–∞—é—Ç –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏, –∫–æ—Ç–æ—Ä—ã—Ö –æ–±—Ä–µ–ª–∏ –≤ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–µ, –∞ –ø–µ–¥–∞–≥–æ–≥–∏ —è–≤–ª—è—é—Ç—Å—è –≤–µ—Ä–Ω—ã–º–∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞–º–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –º–∏—Ä–µ —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏–∏, "
        "–Ω–æ –∏ –Ω–∞ –∂–∏–∑–Ω–µ–Ω–Ω–æ–º –ø—É—Ç–∏!\n\n"
        "–ë–æ–ª—å—à–µ –æ –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ –Ω–∞—à–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö!\n"
        "üìçVK: https://vk.com/ensemble_vavilon_tomsk\n"
        "üìçinst: https://www.instagram.com/vavilon_dance_tomsk?igsh=OTJoNjJmeTF3YjB3&utm_source=qr"
    )

    success = await send_photo_album(
        update, context, 
        album_name='about',
        caption=about_text
    )
    
    if not success:
        await update.message.reply_text(about_text)
    
    if success:
        await show_back_button(update, context)

async def info(update: Update, context: CallbackContext) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–±–æ—Ä–∞—Ö —Å —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º–æ–º"""
    info_text = (
        "‚ùóÔ∏è–ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –ø–µ—Ä–µ–¥ –Ω–∞–±–æ—Ä–∞–º–∏?‚ùóÔ∏è\n\n"
        "1Ô∏è‚É£ –í —á–µ–º –ø—Ä–∏–π—Ç–∏ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã?\n"
        "–§—É—Ç–±–æ–ª–∫–∞, –ª–æ—Å–∏–Ω—ã/—à–æ—Ä—Ç—ã (–ª–µ–≥–∫–æ —Ç—è–Ω—É—â–∏–µ—Å—è), –Ω–æ—Å–æ—á–∫–∏\n\n"
        "2Ô∏è‚É£ –ß—Ç–æ –±—É–¥–µ—Ç –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö?\n"
        "–ü—Ä–æ—Å–º–æ—Ç—Ä—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–µ–¥–∞–≥–æ–≥–∏ –æ—Ü–µ–Ω–∏–ª–∏ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–±–µ–Ω–∫–∞ –∏ –µ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∑–∞–Ω—è—Ç–∏—è–º. "
        "–†–µ–±–µ–Ω–æ–∫ –≤–º–µ—Å—Ç–µ —Å –ø–µ–¥–∞–≥–æ–≥–æ–º –≤—ã–ø–æ–ª–Ω–∏—Ç —Ä—è–¥ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –º—ã —É–≤–∏–¥–∏–º –ø—Ä–∏—Ä–æ–¥–Ω—É—é –≥–∏–±–∫–æ—Å—Ç—å —Ä–µ–±–µ–Ω–∫–∞.\n\n"
        "–ü—Ä–æ—Å–º–æ—Ç—Ä—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –ë–ï–ó –†–û–î–ò–¢–ï–õ–ï–ô.\n"
        "(–†–æ–¥–∏—Ç–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ, –∑–∞—Ç–µ–º –∑–∞—Ö–æ–¥–∏—Ç –≤ –∑–∞–ª –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º).\n"
        "–ù–∞–º –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —Å–º–æ–∂–µ—Ç –ª–∏ —Ä–µ–±–µ–Ω–æ–∫ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏—è—Ö —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.\n\n"
        "‚ùóÔ∏è–£ –¥–µ—Ç–µ–π —Å—Ç–∞—Ä—à–µ 7 –ª–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è –æ–ø—ã—Ç –∑–∞–Ω—è—Ç–∏–π —Å–ø–æ—Ä—Ç–æ–º –∏–ª–∏ —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏–µ–π."
    )
    
    success = await send_photo_album(
        update, context, 
        album_name='info',
        caption=info_text
    )
    
    if not success:
        await update.message.reply_text(info_text)

async def location(update: Update, context: CallbackContext) -> None:
    """–ê–¥—Ä–µ—Å —Å—Ç—É–¥–∏–∏ —Å –∫–∞—Ä—Ç–æ–π"""
    query = update.callback_query
    await query.answer()

    message = await context.bot.send_location(
        chat_id=query.message.chat_id,
        latitude=LOCATION_COORDINATES[0],
        longitude=LOCATION_COORDINATES[1]
    )
    location_messages[query.from_user.id] = message.message_id

    await query.edit_message_text(
        "üìç –ù–∞—à –∞–¥—Ä–µ—Å:\n–≥. –¢–æ–º—Å–∫, —É–ª. –ò—Ä–∫—É—Ç—Å–∫–∏–π —Ç—Ä–∞–∫—Ç, 86/1\n–î–æ–º –∫—É–ª—å—Ç—É—Ä—ã ¬´–ú–∞—è–∫¬ª",
        reply_markup=back_to_menu_keyboard()
    )

async def contacts(update: Update, context: CallbackContext) -> None:
    """–ö–æ–Ω—Ç–∞–∫—Ç—ã"""
    query = update.callback_query
    await query.answer()

    await query.edit_message_text(
        "üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n\n"
        "+7 (913) 880-84-58 - –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ü–ª–æ—Ç–Ω–∏–∫–æ–≤–∞ –ú–∞—Ä–∏–Ω–∞ –ù–∏–∫–æ–ª–∞–µ–≤–Ω–∞\n"
        "+7 (983) 236-42-84 - –Æ–ª–∏—è",
        reply_markup=back_to_menu_keyboard()
    )

def back_to_menu_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é"""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚óÄÔ∏è –í –º–µ–Ω—é", callback_data="back")]
    ])

async def back_to_menu(update: Update, context: CallbackContext) -> None:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await start(update, context)

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(TOKEN).build()

    # ConversationHandler –¥–ª—è –∑–∞–ø–∏—Å–∏
    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(signup, pattern='^signup$')],
        states={
            DATE: [CallbackQueryHandler(date_choice, pattern='^date_')],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, phone_input)],
            PARENT_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, parent_name_input)],
            GIRL_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, girl_name_input)],
            AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, age_input)],
            EXPERIENCE: [MessageHandler(filters.TEXT & ~filters.COMMAND, experience_input)],
            SOURCE: [MessageHandler(filters.TEXT & ~filters.COMMAND, source_input)],
        },
        fallbacks=[
            CallbackQueryHandler(back_to_menu, pattern='^back$')
        ],
    )

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(conv_handler)
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CallbackQueryHandler(about, pattern='^about$'))
    application.add_handler(CallbackQueryHandler(info, pattern='^info$'))
    application.add_handler(CallbackQueryHandler(location, pattern='^location$'))
    application.add_handler(CallbackQueryHandler(contacts, pattern='^contacts$'))
    application.add_handler(CallbackQueryHandler(back_to_menu, pattern='^back$'))
    application.add_handler(CallbackQueryHandler(cancel_lesson, pattern='^cancel$'))

    application.run_polling()

if __name__ == '__main__':
    main()