# -*- coding: utf-8 -*-
"""–±–æ—Ç –≤–∞–≤–∏–ª–æ–Ω

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w-hpJ9DdsCoA4NL1qJIPV72SoXRJhrFe
"""

import os
import logging
import requests
from io import BytesIO  # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackContext,
    CallbackQueryHandler,
    ConversationHandler,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
DATE, PHONE, PARENT_NAME, GIRL_NAME, AGE, EXPERIENCE, SOURCE = range(7)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
user_data_db = {}

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_TOKEN')
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID')

# GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
GITHUB_REPO_URL = "https://raw.githubusercontent.com/syakimmm/vavilon/main/"

# –ú–µ–Ω—é –±–æ—Ç–∞
async def start(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="signup")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û –Ω–∞—Å", callback_data="about")],
        [InlineKeyboardButton("üéí –ß—Ç–æ –≤–∑—è—Ç—å", callback_data="requirements")],
        [InlineKeyboardButton("üÜò –ü–æ–º–æ—â—å", callback_data="help")],
        [
            InlineKeyboardButton("üìÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="program"),
            InlineKeyboardButton("üìç –ê–¥—Ä–µ—Å", callback_data="location")
        ],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")]
    ]

    if update.message:
        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è. ü©∞\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    else:
        query = update.callback_query
        await query.answer()
        await query.edit_message_text(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    handlers = {
        'about': about_handler,
        'requirements': requirements_handler,
        'program': program_handler,
        'location': location_handler,
        'contacts': contacts_handler,
        'help': help_handler,
        'signup': signup_handler,
        'back_to_menu': back_to_menu_handler
    }

    handler = handlers.get(query.data)
    if handler:
        await handler(update, context)

async def about_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    try:
        await send_github_photo(
            update,
            context,
            "166979-chelovek_pauk_net_dorogi_domoj-chelovek_pauk-kinovselennaya_marvel-studiya_marvel-mir-3840x2160.jpg",
            "üåü –û –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏:\n–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ–¥–∞–≥–æ–≥–∏ —Å 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º"
        )
    except Exception as e:
        await query.edit_message_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
    finally:
        await show_back_button(update, context)

async def requirements_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    try:
        await send_github_photo(
            update,
            context,
            "166979-chelovek_pauk_net_dorogi_domoj-chelovek_pauk-kinovselennaya_marvel-studiya_marvel-mir-3840x2160.jpg",
            "üéí –ß—Ç–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π:\n‚Ä¢ –§–æ—Ä–º—É –¥–ª—è —Ç–∞–Ω—Ü–µ–≤\n‚Ä¢ –ß–µ—à–∫–∏/–±–∞–ª–µ—Ç–∫–∏\n‚Ä¢ –ë—É—Ç—ã–ª–∫—É –≤–æ–¥—ã"
        )
    except Exception as e:
        await query.edit_message_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
    finally:
        await show_back_button(update, context)

async def program_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.edit_message_text(
        "üìÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–Ω—è—Ç–∏–π:\n\n1. –†–∞–∑–º–∏–Ω–∫–∞ (15 –º–∏–Ω)\n2. –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å (40 –º–∏–Ω)\n3. –†–∞—Å—Ç—è–∂–∫–∞ (15 –º–∏–Ω)",
        reply_markup=back_to_menu_keyboard()
    )

async def location_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await context.bot.send_location(
        chat_id=query.message.chat_id,
        latitude=56.468238,
        longitude=84.948214
    )
    await query.edit_message_text(
        "üìç –ù–∞—à –∞–¥—Ä–µ—Å:\n–≥. –¢–æ–º—Å–∫, —É–ª. –ò—Ä–∫—É—Ç—Å–∫–∏–π —Ç—Ä–∞–∫—Ç, 86/1\n–î–æ–º –∫—É–ª—å—Ç—É—Ä—ã ¬´–ú–∞—è–∫¬ª",
        reply_markup=back_to_menu_keyboard()
    )

async def contacts_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.edit_message_text(
        "üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 (913) 880-84-58\nEmail: info@studio.ru",
        reply_markup=back_to_menu_keyboard()
    )

async def help_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.edit_message_text(
        "üÜò –ü–æ–º–æ—â—å:\n\n–ï—Å–ª–∏ –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç:\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\n2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ\n3. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º",
        reply_markup=back_to_menu_keyboard()
    )

async def signup_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.edit_message_text(
        "üìù –ó–∞–ø–∏—Å—å –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ:\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", callback_data="date_mon")],
            [InlineKeyboardButton("–°—Ä–µ–¥–∞", callback_data="date_wed")],
            [InlineKeyboardButton("–ü—è—Ç–Ω–∏—Ü–∞", callback_data="date_fri")],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ])
    )

async def back_to_menu_handler(update: Update, context: CallbackContext) -> None:
    await start(update, context)

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async def send_github_photo(update: Update, context: CallbackContext, filename: str, caption: str = ""):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ GitHub"""
    photo_url = f"{GITHUB_REPO_URL}{filename}"
    try:
        response = requests.get(photo_url, timeout=10)
        response.raise_for_status()
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=BytesIO(response.content),
            caption=caption
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
        raise

async def show_back_button(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞"""
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=back_to_menu_keyboard()
    )

def back_to_menu_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é"""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚óÄÔ∏è –í –º–µ–Ω—é", callback_data="back_to_menu")]
    ])

def main() -> None:
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CallbackQueryHandler(button_handler))

    application.run_polling()

if __name__ == '__main__':
    main()